<Page x:Class="Hospital.View.AddInventory"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:val="clr-namespace:Hospital.ValidationRulesManager"
        xmlns:local="clr-namespace:Hospital.View"
        mc:Ignorable="d"
        Background="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" 
        Title="Dodavanje inventara" Height="730" Width="420">

    <Page.Resources>
        <ResourceDictionary Source="/Resources/ManagerResourceDictionary.xaml"/>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid Grid.Row="0" Background="#FF95C0F4" Margin="0,0,0,45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="101*"/>
                    <ColumnDefinition Width="41*"/>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="200*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <Button  Click="BackButtonClick" Height="60" Background="#FF95C0F4" BorderBrush="#FF95C0F4" Margin="5,10,34,6" Grid.Column="0">
                    <Image  Source="/Icon/back.png" Height="57"  Width="76"/>
                </Button>
                <Image Source="/Icon/logo.png"      Margin="124.8,0,10,-0.4" Grid.Column="3" Grid.ColumnSpan="2"/>
            </Grid>
            <Label Content="UNOS INVENTARA" Foreground="#FF4B72F6" FontSize="24" Margin="91,77,96,-0.4" FontWeight="Bold"/>
        </Grid>

        <Label Content="Oznaka:"   Grid.Row="2" Grid.Column="0" Foreground="#FF1E49D9" FontSize="20" Margin="30,4.8,5.4,9.8" />
        <Label Content="Naziv:"    Grid.Row="4" Grid.Column="0" Foreground="#FF1E49D9" FontSize="20" Margin="30,0.4,5.4,10.2" />
        <Label Content="Cena:"     Grid.Row="6" Grid.Column="0" Foreground="#FF1E49D9" FontSize="20" Margin="30,0.2,5.4,10.4" />
        <Label Content="Količina:" Grid.Row="8" Grid.Column="0" Foreground="#FF1E49D9" FontSize="20" Margin="30,0,5.4,20.6" />

        <TextBox x:Name="idTxt" Grid.Row="3" Grid.ColumnSpan="2" Margin="30,0,28,14.6" BorderBrush="#FF26282C">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </TextBox.Resources>
            <TextBox.Text>
                <Binding  Path="Inv.Id"    Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:EmptyField ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="idTxt"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBox x:Name="nameTxt" Grid.Row="4" Grid.ColumnSpan="2" Margin="30,53.4,28,14.8" BorderBrush="#FF26282C" Grid.RowSpan="2">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </TextBox.Resources>
            <TextBox.Text>
                <Binding  Path="Inv.Name"    Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:EmptyField ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="idTxt"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBox x:Name="cenaTxt" Grid.Row="7" Grid.ColumnSpan="2" Margin="30,0.6,28,14" BorderBrush="#FF26282C">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </TextBox.Resources>
            <TextBox.Text>
                <Binding  Path="Inv.Price"    Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:StringToDouble ValidationStep="RawProposedValue"/>
                        <val:MinValue       ValidationStep="ConvertedProposedValue" Min="0" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="cenaTxt"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <TextBox x:Name="kolicinaTxt" Grid.Row="9" Grid.ColumnSpan="2" Margin="30,0.2,28,14.4" BorderBrush="#FF26282C">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </TextBox.Resources>
            <TextBox.Text>
                <Binding  Path="Inv.Quantity"    Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:StringToInteger ValidationStep="RawProposedValue"/>
                        <val:MinValue        ValidationStep="ConvertedProposedValue" Min="0"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="kolicinaTxt"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <Button Grid.Column="0" Grid.Row="10" Grid.RowSpan="2" Content="POTVRDI"  Background="#FFAAD0E0" Foreground="#FF051D6E" Margin="30,31.2,10,39.8" Click="AcceptAddingButtonClick" FontSize="16" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=idTxt}"       Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTxt}"     Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=kolicinaTxt}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=cenaTxt}"     Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Grid.Column="1" Grid.Row="10" Grid.RowSpan="2" Content="ODUSTANI" Background="White"     Foreground="#FF1E49D9" Margin="10,31.2,28,39.8" Style="{StaticResource RoundButtonStyle}" Click="CancelButtonClick" FontSize="16"/>

    </Grid>
</Page>
